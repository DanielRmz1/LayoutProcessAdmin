@model LayoutProcessAdmin.Models.Auditing.Audit

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section css{
    <link href="~/plugins/select2/css/select2.min.css" rel="stylesheet" />
    <style type="text/css">
        .custom-textarea {
            width: 100%;
            height: 15vh;
            resize: none;
        }

        .answers-control {
            display: none;
        }
    </style>

}

@{
    var users = (List<SelectListItem>)ViewBag.Users;

    var periods = new List<SelectListItem>()
    {
        new SelectListItem()
        {
            Text = "Once",
            Value = "o"
        },
        new SelectListItem()
        {
            Text = "Daily",
            Value = "d"
        },
        new SelectListItem()
        {
            Text = "Weekly",
            Value = "w"
        },
        new SelectListItem()
        {
            Text = "Monthly",
            Value = "m"
        },
        new SelectListItem()
        {
            Text = "15 Days",
            Value = "q"
        }
    };

    var weekDays = new List<SelectListItem>()
    {
        new SelectListItem()
        {
            Text = "Sunday",
            Value = "su"
        },
        new SelectListItem()
        {
            Text = "Monday",
            Value = "mo"
        },
        new SelectListItem()
        {
            Text = "Tuesday",
            Value = "tu"
        },
        new SelectListItem()
        {
            Text = "Wednesday",
            Value = "we"
        },
        new SelectListItem()
        {
            Text = "Thursday",
            Value = "th"
        },
        new SelectListItem()
        {
            Text = "Friday",
            Value = "fr"
        },
        new SelectListItem()
        {
            Text = "Saturday",
            Value = "sa"
        }
    };
}

<div class="row">
    <div class="col-xl-12">
        <div class="breadcrumb-holder">
            <h1 class="main-title float-left">Creating an Audit</h1>
            <ol class="breadcrumb float-right">
                <li class="breadcrumb-item">Audits</li>
                <li class="breadcrumb-item active">Create</li>
            </ol>
            <div class="clearfix"></div>
        </div>
    </div>
</div>
    <div class="row">
        <div class="col-lg-12 col-xl-8 col-12 offset-xl-2 offset-lg-0 offset-md-0">
            <div class="card">
                <div class="card-header">
                    <h3 class="text-success"><i class="fa fa-file-invoice" style="font-size:20px;"></i> New Audit</h3>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Create", "Audits", FormMethod.Post, new { id = "auditForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="row">
                            <div class="col-xl-8 col-lg-8 col-md-8 col-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.chr_Name, htmlAttributes: new { @class = "control-label col-8" })
                                    <div class="col-12">
                                        @Html.EditorFor(model => model.chr_Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Audit Name" } })
                                        @Html.ValidationMessageFor(model => model.chr_Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-4 col-lg-4 col-md-4 col-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.int_Type, htmlAttributes: new { @class = "control-label col-8" })
                                    <div class="col-12">
                                        @Html.DropDownListFor(model => model.int_Type, (List<SelectListItem>)ViewBag.AuditTypes, "Select a Option", new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(model => model.int_Type, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.chr_Description, htmlAttributes: new { @class = "control-label col-8" })
                                    <div class="col-12">
                                        @Html.TextAreaFor(model => model.chr_Description, htmlAttributes: new { @class = "form-control custom-textarea", placeholder = "An optional description about the checklist", id = "txtDescription" })
                                        @Html.ValidationMessageFor(model => model.chr_Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-11">
                                <div class="form-group float-right" style="background-color: white;">
                                    <div class="custom-control custom-checkbox">
                                        @Html.CheckBoxFor(model => model.bit_Activo, new { @class = "custom-control-input", type = "checkbox" })
                                        @Html.LabelFor(model => model.bit_Activo, htmlAttributes: new { @class = "custom-control-label" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <ul id="errorSummary" class="text-danger"></ul>
                            <div style="margin-left: auto; margin-right: 20px;">
                                <button class="btn btn-success" type="submit">Next <i class="fa fa-level-down-alt"></i> </button>
                            </div>
                        </div>

                    }

                    <hr />

                    <div class="row">
                        <div class="col-sm-4 col-xl-4 col-lg-4 col-8">
                            <h4 class="text-primary"><i class="fa fa-layer-group"></i> Layers</h4>
                        </div>
                        <div style="margin-left: auto;margin-right: 20px;" class="question-container">
                            <button id="btnAddLay" type="button" class="btn btn-primary text-white" data-toggle="modal" data-target="#addLay">Add New Lay <i class="fa fa-plus"></i></button>
                        </div>
                    </div><br />

                </div>
                <div class="card-footer">
                    <div class="form-group float-right">
                        <div class="row">
                            @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-warning", role = "button" }) &nbsp;
                            
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


@section Scripts {
    <script src="~/plugins/select2/js/select2.min.js"></script>

    <script>
        $(document).ready(function() {
            $('.select2').select2();
            var currentAuditId;

            $('#auditForm').on('submit',function (e) {
                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("Create", "Audits")',
                    type: "POST",
                    data: $('#auditForm').serialize(),
                    success: function (data) {
                        $('#errorSummary').html('');

                        if (data.success) {
                            currentAuditId = data.data.auditId;
                        } else {
                            data.messagge.forEach(function (e) {
                                $('#errorSummary').append("<li>" + e + "</li>");
                            });
                        }
                        
                    },
                    error: function (jXHR, textStatus, errorThrown) {
                        alert(errorThrown);
                        alert(textStatus);
                    }
                });
            });
        });

        $(window).resize(function () {
            $('.select2').select2();
        });
    </script>
}

