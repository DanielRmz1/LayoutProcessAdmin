@model LayoutProcessAdmin.Models.Checking.Checklist

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var users = (List<SelectListItem>) ViewBag.Users;

    var periods = new List<SelectListItem>()
    {
        new SelectListItem()
        {
            Text = "Daily",
            Value = "d"
        },
        new SelectListItem()
        {
            Text = "Weekly",
            Value = "w"
        },
        new SelectListItem()
        {
            Text = "Monthly",
            Value = "m"
        },
        new SelectListItem()
        {
            Text = "15 Days",
            Value = "q"
        }
    };

    var weekDays = new List<SelectListItem>()
    {
        new SelectListItem()
        {
            Text = "Sunday",
            Value = "su"
        },
        new SelectListItem()
        {
            Text = "Monday",
            Value = "mo"
        },
        new SelectListItem()
        {
            Text = "Tuesday",
            Value = "tu"
        },
        new SelectListItem()
        {
            Text = "Wednesday",
            Value = "we"
        },
        new SelectListItem()
        {
            Text = "Thursday",
            Value = "th"
        },
        new SelectListItem()
        {
            Text = "Friday",
            Value = "fr"
        },
        new SelectListItem()
        {
            Text = "Saturday",
            Value = "sa"
        }
    };
}

@section css{
    <link href="~/plugins/select2/css/select2.min.css" rel="stylesheet" />
    <style type="text/css">
        .custom-textarea {
            width: 100%;
            height: 100px;
            resize: none;
        }

        .answers-control {
            display: none;
        }
    </style>

}

<div class="row">
    <div class="col-xl-12">
        <div class="breadcrumb-holder">
            <h1 class="main-title float-left">Creating a Ckecklist</h1>
            <ol class="breadcrumb float-right">
                <li class="breadcrumb-item">Checklist</li>
                <li class="breadcrumb-item active">Create</li>
            </ol>
            <div class="clearfix"></div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12 col-xl-8 col-12 offset-xl-2 offset-lg-0 offset-md-0">
        <div class="card">
            <div class="card-header">
                <h3 class="text-success"><i class="fa fa-clipboard-list" style="font-size:20px;"></i> New Checklist</h3>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Create", "Checklists", FormMethod.Post, new { id = "checklistForm"}))
                {
                    @Html.AntiForgeryToken()
                <div class="row">
                    <div style="margin-left: auto; margin-right: 20px;">
                        <label class="text-success" id="successSumary"></label>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-8 col-sm-12">
                        
                        <div class="row">
                            <div class="col-lg-4 col-sm-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.chr_Clave, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.chr_Clave, new { htmlAttributes = new { @class = "form-control", placeholder = "Text identifier", id = "txtClave" } })
                                        @Html.ValidationMessageFor(model => model.chr_Clave, "", new { @class = "text-danger", id = "lblClave" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-8 col-sm-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.chr_Name, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.chr_Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Example -> Daily 5s Line Checklist", id = "txtNombre" } })
                                        @Html.ValidationMessageFor(model => model.chr_Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.chr_Description, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-12">
                                        @Html.TextAreaFor(model => model.chr_Description, htmlAttributes: new { @class = "form-control custom-textarea", placeholder = "An optional description about the checklist", id = "txtDescription" })
                                        @Html.ValidationMessageFor(model => model.chr_Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-sm-12">
                        <div class="row">
                            <div class="col-12">
                                @Html.LabelFor(model => model.SelectedPeriod, htmlAttributes: new { @class = "control-label" })
                                <div class="col-10">
                                    @Html.DropDownListFor(model => model.SelectedPeriod, periods, "Select a Option", new { @class = "form-control select2 " })
                                    @Html.ValidationMessageFor(model => model.SelectedPeriod, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div><br />
                        <div class="row">
                            <div class="col-12">
                                @Html.LabelFor(model => model.Days, htmlAttributes: new { @class = "control-label" })
                                <div class="col-10">
                                    @Html.DropDownListFor(model => model.Days, weekDays, "Select a Option", new { @class = "form-control select2", multiple = "multiple" })
                                    @Html.ValidationMessageFor(model => model.Days, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div><br />
                        <div class="row">
                            <div class="col-12">
                                @Html.LabelFor(model => model.SelectedUsers, htmlAttributes: new { @class = "control-label" })
                                <div class="col-10">
                                    @Html.DropDownListFor(model => model.SelectedUsers, users, "Select a Option", new { @class = "form-control select2", multiple = "multiple" })
                                    @Html.ValidationMessageFor(model => model.SelectedUsers, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div><br />
                        <div class="row">
                            <div class="col-12">
                                @Html.LabelFor(model => model.int_Area, htmlAttributes: new { @class = "control-label"})
                                <div class="col-10">
                                    @Html.DropDownListFor(model => model.int_Area, (List<SelectListItem>)ViewBag.Areas, "Select a Option", new { @class = "form-control select2"})
                                    @Html.ValidationMessageFor(model => model.int_Area, "", new { @class = "text-danger"})
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-12" style="background-color: white;">
                                <div class="custom-control custom-checkbox">
                                    @Html.CheckBoxFor(model => model.bit_Activo, new { @class = "custom-control-input", type = "checkbox", style = "width: 30px; height: 30px;" })
                                    @Html.LabelFor(model => model.bit_Activo, htmlAttributes: new { @class = "custom-control-label" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div><br />

                <div class="row">
                    <ul id="errorSummary" class="text-danger">
                    </ul>
                    <div style="margin-left: auto; margin-right: 20px;">
                        <button class="btn btn-success" type="submit">Next <i class="fa fa-level-down-alt"></i> </button>
                    </div>
                </div>
                }

                <hr />

                <div class="row">
                    <div class="col-sm-4 col-xl-4 col-lg-4 col-8">
                        <h4 class="text-primary"><i class="fa fa-question-circle"></i> Questions</h4>
                    </div>
                    <div style="margin-left: auto;margin-right: 20px;" class="question-container">
                        <button id="btnAddQuestion" type="button" class="btn btn-primary text-white" data-toggle="modal" data-target="#addQuestion">Add Question <i class="fa fa-plus"></i></button>
                    </div>
                </div><br />

                <div class="row question-container">
                    <div class="col-12">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>@Html.DisplayNameFor(model => model.Questions[0].chr_Description)</th>
                                    <th>@Html.DisplayNameFor(model => model.Questions[0].chr_Type)</th>
                                    <th>Edit</th>
                                </tr>
                            </thead>
                            <tbody>
                                @*<tr>
                                    <td>1</td>
                                    <td>akjdasdjla skldaskld akljsd akjsdaio qwodo dasojdo iasdjia sdao sdoa sodaosisisi adjo aosd</td>
                                    <td>Multiple</td>
                                    <td><a class="btn btn-warning btn-sm"><i class="fa fa-pen"></i></a></td>
                                </tr>*@
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
            <div class="card-footer">
                <div class="form-group float-right">
                    <div class="col-md-10">
                        <button type="submit" class="btn btn-success">Save Checklist <i class="fa fa-check-circle" style="font-size: 20px;"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addQuestion" tabindex="-1" role="dialog" aria-labelledby="addQuestionLabel" aria-hidden="true">  <!-- Modal for form questions  -->
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addQuestionLabel"><i class="fa fa-plus-circle"></i> Add a new question</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-6">
                        <label for="selectType">Question Type</label>
                        <select id="selectType" class="select2 form-control" style="width: 100%;">
                            <option value="none">-- Select a Option --</option>
                            <option value="mu">Multiple</option>
                            <option value="yn">Yes/No</option>
                            <option value="op">Open</option>
                            <option value="ca">Calculated</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="form-group">
                            <label for="idPregunta" class="col-form-label">Description</label>
                            <textarea id="idPregunta" class="form-control custom-textarea"></textarea>
                        </div>
                    </div>
                </div>  
                <hr />
                <div id="answersContainer">
                    <div class="row">
                        <div class="col-4">
                            <h4 class="text-primary">Answers</h4>
                        </div>
                        <div style="margin-left:auto;margin-right:20px;">
                            <button class="btn btn-sm btn-danger" id="btnRemoveAnswer">Remove <i class="fa fa-minus"></i></button>
                            <button class="btn btn-sm btn-success" id="btnAddAnswer">Add <i class="fa fa-plus"></i></button>
                        </div>
                    </div>
                    <div class="row" id="answersTextBoxes">
                    </div>
                    <div class="row form-group">
                        <div class="custom-control custom-checkbox" style="margin-left: 20px;">
                            <input type="checkbox" class="custom-control-input" id="chSingleAnswer" />
                            <label for="chSingleAnswer" class="custom-control-label">Is single answer</label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="helpModal" tabindex="-1" role="dialog" aria-labelledby="helpModalLabel" aria-hidden="true">
    <!-- Modal for form questions  -->
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fa fa-question-circle"></i> Calculated Question - Example</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-10 offset-1">
                        <img src="@Url.Content("~/Images/EjemploCampoCalculado.PNG")" class="img-fluid" />
                    </div>
                </div><hr />
                <div class="row">
                    <div class="col-10 offset-1">
                        <img src="@Url.Content("~/Images/EjemploCampoCalculado-2.PNG")" class="img-fluid" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/plugins/select2/js/select2.min.js"></script>

    <script>
        $(document).ready(function () {
            $('.select2').select2();
            $('.question-container').hide();

            var currentChecklistId;
            var selectedType;

            var Answer = ({
                addYesNo: function () {
                    var div = document.createElement('div');
                    div.classList = "col-10 form-group";
                    var input = document.createElement("input");
                    input.classList = "form-control";
                    input.value = "Yes";
                    input.id = "txtYes";

                    div.appendChild(input);
                    div.appendChild(document.createElement('br'));

                    var input2 = document.createElement("input");
                    input2.classList = "form-control";
                    input2.value = "No";
                    input2.id = "txtNo";

                    div.appendChild(input2);

                    return div;
                },
                addMultiple: function () {
                    var div = document.createElement('div');
                    div.classList = "col-10 form-group";
                    div.id = "multipleContainer";

                    var input = document.createElement("input");
                    input.classList = "form-control";
                    input.placeholder = "New Answer";

                    div.appendChild(input);
                    div.appendChild(document.createElement('br'));
                    return div;
                },
                addInput: function () {
                    var input = document.createElement('input');
                    input.classList = "form-control";
                    input.placeholder = "New Answer";
                    document.getElementById("multipleContainer").appendChild(input);
                    document.getElementById("multipleContainer").appendChild(document.createElement('br'));
                },
                removeInput: function () {
                    $('#multipleContainer input').last().remove();
                    $('#multipleContainer br').last().remove();
                },
                addCalculated: function () {
                    var div = document.createElement('div');
                    div.classList = "col-12 form-group";
                    div.id = "calculatedContainer";

                    var newRow = document.createElement('div');
                    newRow.classList = "row";

                    var formulaInput = document.createElement('input');
                    formulaInput.classList = "form-control";
                    formulaInput.id = "formulaInput";
                    formulaInput.placeholder = "Formula: Example -> (base*height)/2";
                    
                    var help = document.createElement('i');
                    help.classList = "fa fa-question-circle text-primary";
                    help.style = "font-size: 24px;cursor: pointer;";
                    help.onclick = function () {
                        $('#helpModal').modal('show');
                    };     

                    var formulaDiv = document.createElement('div');
                    formulaDiv.classList = "col-11";
                    var helpDiv = document.createElement('div');
                    helpDiv.classList = "col-1";

                    formulaDiv.appendChild(formulaInput);
                    helpDiv.appendChild(help);

                    newRow.appendChild(formulaDiv);
                    newRow.appendChild(helpDiv);
                    div.appendChild(newRow);
                    div.appendChild(document.createElement('br'));
                    
                    var row = document.createElement('div');
                    row.classList = "row form-group entry";

                    var variableDiv = document.createElement('div');
                    variableDiv.classList = "col-3";

                    var answerDiv = document.createElement('div');
                    answerDiv.classList = "col-9";

                    var variableInput = document.createElement("input");
                    variableInput.placeholder = "Variable";
                    variableInput.classList = "form-control";
                    variableDiv.appendChild(variableInput);

                    var answerInput = document.createElement("input");
                    answerInput.placeholder = "New answer";
                    answerInput.classList = "form-control";
                    answerDiv.appendChild(answerInput);

                    row.appendChild(variableDiv);
                    row.appendChild(answerDiv);

                    div.appendChild(row);

                    return div;
                },
                addCalculatedInput: function () {
                    var div = document.getElementById("calculatedContainer");

                    var row = document.createElement('div');
                    row.classList = "row form-group entry";

                    var variableDiv = document.createElement('div');
                    variableDiv.classList = "col-3";

                    var answerDiv = document.createElement('div');
                    answerDiv.classList = "col-9";

                    var variableInput = document.createElement("input");
                    variableInput.placeholder = "Variable";
                    variableInput.classList = "form-control";
                    variableDiv.appendChild(variableInput);

                    var answerInput = document.createElement("input");
                    answerInput.placeholder = "New answer";
                    answerInput.classList = "form-control";
                    answerDiv.appendChild(answerInput);

                    row.appendChild(variableDiv);
                    row.appendChild(answerDiv);

                    div.appendChild(row);
                },
                removeCalculatedInput: function () {
                    $('#calculatedContainer .entry').last().remove();
                }
            });

            $('#checklistForm').on('submit',function (e) {
                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("Create", "Checklists")',
                    type: "POST",
                    data: $('#checklistForm').serialize(),
                    success: function (data) {
                        $('#errorSummary').html('');
                        if (data.length > 0) {
                            
                            data.forEach(function (e) {
                                $('#errorSummary').append("<li>" + e + "</li>");
                            });

                        } else {
                            if (data == -10)
                                $('#errorSummary').append("<li>The checklist key already exixts, set another one.</li>");
                            else {
                                var succesIcon = document.createElement('i');
                                succesIcon.classList = "fa fa-check-circle";
                                $('#successSumary').html('Checklist registered successfuly ');
                                $('#successSumary').append(succesIcon);
                                $('#lblClave').html('');
                                currentChecklistId = data;
                                $('.question-container').show();
                            }
                        }
                    },
                    error: function (jXHR, textStatus, errorThrown) {
                        alert(errorThrown);
                        alert(textStatus);
                    }
                });
            });

            $('#btnAddQuestion').on('click', function () {
                $('#answersContainer').hide();
                ShowQuestionModal();
            });

            $('#selectType').change(function () {
                $('#answersTextBoxes').html("");
                selectedType = $('#selectType').val();
                
                $('#answersContainer').show();

                switch (selectedType) {
                    case "none":
                        $('#answersContainer').hide();
                        break;
                    case "yn":
                        $('#btnAddAnswer').hide();
                        $('#answersTextBoxes').append(Answer.addYesNo());
                        $('#chSingleAnswer').prop("checked", true);
                        $('#chSingleAnswer').attr('disabled', 'disabled');
                        break;
                    case "op":
                        $('#btnAddAnswer').hide();
                        $('#chSingleAnswer').prop("checked", true);
                        $('#chSingleAnswer').attr('disabled', 'disabled');
                        break;
                    case "mu":
                        $('#btnAddAnswer').show();
                        $('#answersTextBoxes').append(Answer.addMultiple());
                        $('#chSingleAnswer').prop("checked", false);
                        $('#chSingleAnswer').remove('disabled');
                        break;
                    case "ca":
                        $('#btnAddAnswer').show();
                        $('#answersTextBoxes').append(Answer.addCalculated());
                        $('#chSingleAnswer').prop("checked", true);
                        $('#chSingleAnswer').attr('disabled', 'disabled');
                        break;
                    default:
                        $('#answersContainer').hide();
                        break;

                }
            });

            $('#btnAddAnswer').on('click', function () {
                switch (selectedType) {
                    case "mu":
                        Answer.addInput();
                        break;
                    case "ca":
                        Answer.addCalculatedInput();
                        break;
                }
            });

            $('#btnRemoveAnswer').on('click', function () {
                switch (selectedType) {
                    case "mu":
                        Answer.removeInput();
                        break;
                    case "ca":
                        Answer.removeCalculatedInput();
                        break;
                }
            });

            function ShowQuestionModal() {
                $('#selectType').val(0);
                $('#addQuestion').modal('show');
            }
            
            $(window).bind('beforeunload', function () {
                if(currentChecklistId != 0 && currentChecklistId != null)
                    return 'Are you sure you want to leave?';
            });

            window.onunload = function () {
                var form = $('#checklistForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                 $.ajax({
                    url: '@Url.Action("Delete", "Checklists")',
                    type: "POST",
                     data: { __RequestVerificationToken: token, id: currentChecklistId }
                 });
            }
        });

    </script>
}