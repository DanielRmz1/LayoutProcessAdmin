@model LayoutProcessAdmin.Models.Checking.Checklist

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section css{
    <link href="~/plugins/select2/css/select2.min.css" rel="stylesheet" />
    <style type="text/css">
        .custom-textarea {
            width: 100%;
            height: 100px;
            resize: none;
        }

        .answers-control {
            display: none;
        }
    </style>

}

<div class="row">
    <div class="col-xl-12">
        <div class="breadcrumb-holder">
            <h1 class="main-title float-left">Editing a Ckecklist</h1>
            <ol class="breadcrumb float-right">
                <li class="breadcrumb-item">Checklist</li>
                <li class="breadcrumb-item active">Edit</li>
            </ol>
            <div class="clearfix"></div>
        </div>
    </div>
</div>



<div class="row">
    <div class="col-lg-12 col-xl-8 col-12 offset-xl-2 offset-lg-0 offset-md-0">
        <div class="card">
            <div class="card-header">
                <h3 class="text-success"><i class="fa fa-clipboard-list" style="font-size:20px;"></i> New Checklist</h3>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Edit", "Checklists", FormMethod.Post, new { id = "checklistForm" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div style="margin-left: auto; margin-right: 20px;">
                            <label class="text-success" id="successSumary"></label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-8 col-sm-12">
                            @Html.HiddenFor(x => x.int_IdList)
                            @*@Html.HiddenFor(x => x.id_Period)*@
                            <div class="row">
                                <div class="col-lg-4 col-sm-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.chr_Clave, htmlAttributes: new { @class = "control-label" })
                                        <div>
                                            @Html.EditorFor(model => model.chr_Clave, new { htmlAttributes = new { @class = "form-control", placeholder = "Text identifier", id = "txtClave" } })
                                            @Html.ValidationMessageFor(model => model.chr_Clave, "", new { @class = "text-danger", id = "lblClave" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-8 col-sm-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.chr_Name, htmlAttributes: new { @class = "control-label" })
                                        <div>
                                            @Html.EditorFor(model => model.chr_Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Example -> Daily 5s Line Checklist", id = "txtNombre" } })
                                            @Html.ValidationMessageFor(model => model.chr_Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.chr_Description, htmlAttributes: new { @class = "control-label" })
                                        <div class="col-12">
                                            @Html.TextAreaFor(model => model.chr_Description, htmlAttributes: new { @class = "form-control custom-textarea", placeholder = "An optional description about the checklist", id = "txtDescription" })
                                            @Html.ValidationMessageFor(model => model.chr_Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4 col-sm-12">
                            @*<div class="row">
                                <div class="col-12">
                                    @Html.LabelFor(model => model.SelectedPeriod, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-10">
                                        @Html.DropDownListFor(model => model.SelectedPeriod, (List<SelectListItem>)ViewBag.Periods, "Select a Option", new { @class = "form-control select2 " })
                                        @Html.ValidationMessageFor(model => model.SelectedPeriod, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div><br />
                            <div class="row">
                                <div class="col-12">
                                    @Html.LabelFor(model => model.Days, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-10">
                                        @Html.DropDownListFor(model => model.Days, (List<SelectListItem>)ViewBag.Days, htmlAttributes: new { @class = "form-control select2", multiple = "multiple", id = "daysSelect" })
                                        @Html.ValidationMessageFor(model => model.Days, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div><br />*@
                            <div class="row">
                                <div class="col-12">
                                    @Html.LabelFor(model => model.SelectedUsers, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-10">
                                        @Html.DropDownListFor(model => model.SelectedUsers, (List<SelectListItem>)ViewBag.Users, htmlAttributes: new { @class = "form-control select2", multiple = "multiple" })
                                        @Html.ValidationMessageFor(model => model.SelectedUsers, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div><br />
                            <div class="row">
                                <div class="col-12">
                                    @Html.LabelFor(model => model.int_Area, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-10">
                                        @Html.DropDownListFor(model => model.int_Area, (List<SelectListItem>)ViewBag.Areas, "Select a Option", new { @class = "form-control select2", id = "areaSelect" })
                                        @Html.ValidationMessageFor(model => model.int_Area, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            @*<div class="row">
                                <div class="form-group col-12" style="background-color: white;">
                                    <div class="custom-control custom-checkbox">
                                        @Html.CheckBoxFor(model => model.bit_Activo, new { @class = "custom-control-input", type = "checkbox", style = "width: 30px; height: 30px;" })
                                        @Html.LabelFor(model => model.bit_Activo, htmlAttributes: new { @class = "custom-control-label" })
                                    </div>
                                </div>
                            </div>*@
                        </div>
                    </div><br />

                    <div class="row">
                        <ul id="errorSummary" class="text-danger"></ul>
                    </div>
                }

                <hr />

                <div class="row">
                    <div class="col-sm-4 col-xl-4 col-lg-4 col-8">
                        <h4 class="text-primary"><i class="fa fa-question-circle"></i> Questions</h4>
                    </div>
                    <div style="margin-left: auto;margin-right: 20px;" class="question-container">
                        <button id="btnAddQuestion" type="button" class="btn btn-primary text-white" data-toggle="modal" data-target="#addQuestion">Add Question <i class="fa fa-plus"></i></button>
                    </div>
                </div><br />

                <div class="row question-container">
                    <div class="col-12">
                        <table class="table table-hover table-responsive-sm" id="questionsTable">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>@Html.DisplayNameFor(model => model.Questions[0].chr_Description)</th>
                                    <th>@Html.DisplayNameFor(model => model.Questions[0].chr_Type)</th>
                                    <th>@Html.DisplayNameFor(model => model.Questions[0].bit_SingleAnswer)</th>
                                    <th>@Html.DisplayNameFor(model => model.Questions[0].chr_Formula)</th>
                                    <th>Edit / Delete</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>

            </div>
            <div class="card-footer">
                <div class="form-group float-right">
                    <div class="row">
                        <a href="@Url.Action("Index", "Checklists")" class="btn btn-warning" role="button"><i class="fa fa-long-arrow-alt-left"></i> Return</a> &nbsp;
                        <button type="button" class="btn btn-success" id="saveChecklist">Save Checklist <i class="fa fa-check-circle" style="font-size: 20px;"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addQuestion" tabindex="-1" role="dialog" aria-labelledby="addQuestionLabel" aria-hidden="true">
    <!-- Modal for form questions  -->
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("Create", "Questions", FormMethod.Post, new { id = "questionForm" }))
            {
                @Html.AntiForgeryToken()

                <div class="modal-header">
                    <h5 class="modal-title" id="addQuestionLabel"><i class="fa fa-plus-circle"></i> Add a new question</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-6">
                            <label for="selectType">Question Type</label>
                            <select id="selectType" class="select2 form-control" style="width: 100%;">
                                <option value="none">-- Select a Option --</option>
                                <option value="in">Numerical</option>
                                <option value="mu">Multiple</option>
                                <option value="yn">Yes/No</option>
                                <option value="op">Open</option>
                                <option value="ca">Calculated</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                <label for="idPregunta" class="col-form-label">Description</label>
                                <textarea id="idPregunta" class="form-control custom-textarea"></textarea>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div id="answersContainer">
                        <div class="row">
                            <div class="col-4">
                                <h4 class="text-primary">Answers</h4>
                            </div>
                            <div style="margin-left:auto;margin-right:20px;">
                                <a role="button" class="btn btn-sm btn-danger text-white" id="btnRemoveAnswer">Remove <i class="fa fa-minus"></i></a>
                                <a role="button" class="btn btn-sm btn-success text-white" id="btnAddAnswer">Add <i class="fa fa-plus"></i></a>
                            </div>
                        </div>
                        <div class="row" id="answersTextBoxes">
                        </div>
                        <div class="row form-group">
                            <div class="custom-control custom-checkbox" style="margin-left: 20px;" id="aasdasd">
                                <input type="checkbox" class="custom-control-input" id="chSingleAnswer" />
                                <label for="chSingleAnswer" class="custom-control-label">Is single answer</label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="text-danger text-justify" id="questionSumary"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Save</button>
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="deleteQuestionModal" tabindex="-1" role="dialog" aria-labelledby="deleteQuestionLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fa fa-question-circle"></i> Are you sure of delete this?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12 text-justify">
                        You will lose the question and all the answers you have added.
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="text" class="id-question" hidden="hidden" />
                <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="DeleteQuestion()">Delete</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="helpModal" tabindex="-1" role="dialog" aria-labelledby="helpModalLabel" aria-hidden="true">
    <!-- Modal for form questions  -->
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fa fa-question-circle"></i> Calculated Question - Example</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-10 offset-1">
                        <img src="@Url.Content("~/Images/EjemploCampoCalculado.PNG")" class="img-fluid" />
                    </div>
                </div><hr />
                <div class="row">
                    <div class="col-10 offset-1">
                        <img src="@Url.Content("~/Images/EjemploCampoCalculado-2.PNG")" class="img-fluid" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script src="~/plugins/select2/js/select2.min.js"></script>
<script src="~/Scripts/LpaScripts/question-elements-1.0.1.js"></script>

<script>
    //var intPeriod;
    $(document).ready(function () {
        currentChecklistId = '@Model.int_IdList';
        @*intPeriod = '@Model.int_Period.int_IdPeriod';*@
        console.log(intPeriod);
        GetSelectedDays();
        GetSelectedArea();
        UpdateQuestionsTable(currentChecklistId);

        $('#checklistForm').on('submit',function (e) {
            e.preventDefault();
            $.ajax({
                url: '@Url.Action("Edit", "Checklists")',
                type: "POST",
                data: $('#checklistForm').serialize(),
                success: function (data) {
                    $('#errorSummary').html('');

                    if(data.Success){
                        window.location = '@Url.Action("Index", "Checklists")';
                    }else{
                        data.forEach(function (e) {
                            $('#errorSummary').append("<li>" + e + "</li>");
                        });
                    }
                },
                error: function (jXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                    alert(textStatus);
                }
            });
        });

        $('#saveChecklist').on('click', function () {
            $('#checklistForm').submit();
                
        });

        $('.select2').select2();
    });

    $('#questionForm').on('submit', function (e) {
        e.preventDefault();
        token = $('input[name="__RequestVerificationToken"]', $('#questionForm')).val();
        $.ajax({
            url: '@Url.Action("Create", "Questions")',
            type: "POST",
            data: {
                __RequestVerificationToken: token,
                description: $('#idPregunta').val(),
                type: $('#selectType').val(),
                singleAnswer: $('#chSingleAnswer').is(':checked'),
                formula: $('#formulaInput').val(),
                id_checklist: currentChecklistId,
                id_question: editingQuestionId
            },
            success: function (data) {
                if (data.Success) {
                    switch (selectedType) {
                        case "yn":
                            $('#answersTextBoxes input').each(function () {
                                AddAnswer(this.value, "", data.id, 0, 0);
                            });
                            $('#addQuestion').modal('hide');
                            break;
                        case "op":
                            AddAnswer("textarea", "", data.id, 0, 0);
                            $('#addQuestion').modal('hide');
                            break;
                        case "mu":
                            $('#answersTextBoxes input').each(function () {
                                AddAnswer(this.value, "", data.id, 0, 0);
                            });
                            $('#addQuestion').modal('hide');
                            break;
                        case "ca":
                            $('#answersTextBoxes .entry').each(function () {
                                AddAnswer($(this).find(".col-9 input").val(), $(this).find(".col-3 input").val(), data.id, 0, 0);
                            });
                            $('#addQuestion').modal('hide');
                            break;
                        case "in":
                            AddAnswer("", "", data.id, $('#lower-limit').val(), $('#upper-limit').val());
                            $('#addQuestion').modal('hide');
                            break;
                        default:
                            $('#answersContainer').hide();
                            break;
                    }

                    UpdateQuestionsTable(currentChecklistId);
                } else
                    $('#questionSumary').append(data.Message);

            },
            error: function (jXHR, textStatus, errorThrown) {
                alert(errorThrown);
                alert(textStatus);
                alert(jXHR);
            }
        });
    });

    //string description, string formula, string variable, int id_question
    function AddAnswer(description, variable, id_question, lwLimit, upLimit) {
        token = $('input[name="__RequestVerificationToken"]', $('#questionForm')).val();
        $.ajax({
            url: '@Url.Action("Create", "Answers")',
            type: "POST",
            async: false,
            data: {
                __RequestVerificationToken: token,
                description: description,
                variable: variable,
                id_question: id_question,
                lowerLimit: lwLimit,
                upperLimit: upLimit
            },
            error: function (jXHR, textStatus, errorThrown) {
                alert(errorThrown);
                alert(textStatus);
                alert(jXHR);
            }
        });
    }

    function UpdateQuestionsTable(id) {
        $.ajax({
            url: '@Url.Action("Get", "Questions")',
            type: "GET",
            data: { id: id },
            success: function (data) {
                $('#questionsTable tbody').html('');
                for (var i = 0; i < data.length; i++) {
                    $('#questionsTable tbody').append(Question.addRow(i + 1, data[i].chr_Description, data[i].chr_Type, data[i].bit_SingleAnswer, data[i].chr_Formula, data[i].int_IdQuestion));
                }
            },
            error: function (jXHR, textStatus, errorThrown) {
                alert(errorThrown);
                alert(textStatus);
            }
        });
    }

    function DeleteQuestion() {
        $.ajax({
            url: '@Url.Action("Delete", "Questions")',
            type: "POST",
            data: {
                __RequestVerificationToken: token,
                id: $('#deleteQuestionModal .id-question').val()
            },
            success: function (result) {
                if (!result.Success)
                    alert(result.Message);
                else {
                    $('#deleteQuestionModal').modal('hide');
                    UpdateQuestionsTable(currentChecklistId);
                }
            },
            error: function (jXHR, textStatus, errorThrown) {
                alert(errorThrown);
                alert(textStatus);
                alert(jXHR);
            }
        });

    }

    function EditQuestion(id) {
        $.ajax({
            url: '@Url.Action("GetQuestion", "Questions")',
            type: "GET",
            data: { id: id },
            success: function (data) {
                isEditing = true;
                editingQuestionId = id;
                ShowQuestionModal(data);
            },
            error: function (jXHR, textStatus, errorThrown) {
                alert(errorThrown);
                alert(textStatus);
            }
        });
    }

    function GetSelectedDays() {
        $.ajax({
            url: '@Url.Action("GetSelectedDays", "Checklists")',
            type: "GET",
            data: { period: intPeriod },
                success: function (data) {
                    if (data.Success)
                    {
                        $('#daysSelect').val(data.Result);
                        $('#daysSelect').trigger('change');
                    }
                },
                error: function (jXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                    alert(textStatus);
                }
            });
    }

    function GetSelectedArea() {
        $.ajax({
            url: '@Url.Action("GetSelectedArea", "Checklists")',
            type: "GET",
            data: { checklist: currentChecklistId },
                success: function (data) {
                    if (data.Success)
                    {
                        $('#areaSelect').val(data.Result);
                        $('#areaSelect').trigger('change');
                    }
                },
                error: function (jXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                    alert(textStatus);
                }
            });
    }
</script>
}